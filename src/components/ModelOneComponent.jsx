import React, { useState, useEffect } from 'react';
import './ModelOneComponent.css';

const ModelOneComponent = ({ closefunction }) => {
  const [slideState, setSlideState] = useState(''); // Initially empty to avoid immediate animation

  useEffect(() => {
    // Trigger slide-in animation when the component mounts
    setTimeout(() => {
      setSlideState('slide-in');
    }, 10); // Small delay to ensure initial render completes before adding the class
  }, []);

  // Trigger closing animation before actually closing
  const handleClose = () => {
    setSlideState('slide-out');
    // Wait for the slide-out animation to finish before actually closing
    setTimeout(() => {
      closefunction();
    }, 500); // Duration matches CSS transition
  };

  return (
    <div className='one_model'>
      <div className={`one_model-container ${slideState}`}>
        {/* Close Button */}
        <button className="one_close-btn" onClick={handleClose}>
          <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12Z" stroke="#000" strokeWidth="1.5"></path>
            <path d="M14.5 9.50002L9.5 14.5M9.49998 9.5L14.5 14.5" stroke="#000" strokeWidth="1.5" strokeLinecap="round"></path>
          </svg>
        </button>

        {/* First Divider Line */}
        <div className="one_divider-line"></div>

        {/* Content Section */}
        <div className="one_image-text-section">
          <div className="one_left-section">
            <div className="one_ceo-profile">
              <img src="/Images/profile.png" alt="CEO" className="one_profile-image" />
              <div>
                <h1>Lorem Ipsum</h1>
                <p>Chief Executive Officer</p>
              </div>
            </div>
            <div className="one_qr-code">
              <img src="/Images/Qrcode.png" alt="QR Code" className="one_qr-image" />
              <div>
                <p>Scan here to watch</p>
                <p>CEO's message video</p>
              </div>
            </div>
          </div>

          <div className="one_right-section">
            <div className="one_description">
            <p>
                VR’s future growth will hinge on creating applications for consumers and enterprises that take full advantage of the immersive medium and encourage repeat usage. Advances in social VR games, next-gen storytelling, remote travel and education, and enterprise training and collaboration could all help drive adoption. However, if VR use cases overindex on its novelty, or if applications are hard to scale or simply work better on other devices, it’s unlikely to reach the adoption rate of other consumer devices. VR hardware and software providers understand this: In 2023, we expect the industry to progress greatly in identifying the specific consumer and enterprise applications for which VR is optimal, able to address needs not currently being met by other devices or, indeed, by real-world experiences.Games can also access inputs from game controllers or steering wheels. Because VR users who are moving around risk bumping into real-life objects or people, VR experiences are more fit for dedicated spaces rather than communal settings. Headsets and positional tracking devices can model the physical spaces in which users don headsets and even track their body movements
              </p>
              <p>
                The most suitable use cases will be for immersive applications that do not require frequent, precise control, like entering text. These applications would mostly track a user’s hands, and increasingly their eyes and bodies, as input. Games can also access inputs from game controllers or steering wheels. Because VR users who are moving around risk bumping into real-life objects or people, VR experiences are more fit for dedicated spaces rather than communal settings. Headsets and positional tracking devices can model the physical spaces in which users don headsets and even track their body movements.
              </p>
              <p>
                Due to current battery limitations for untethered headsets—and fatigue for some users—VR will also be more appropriate for uses that last for tens of minutes at a time rather than hours. For some users, too, the heat generated by a headset may cause dryness of the eyes. This means that they won’t use VR for a full day—but again, they may not need to for it to be useful.Games can also access inputs from game controllers or steering wheels. Because VR users who are moving around risk bumping into real-life objects or people, VR experiences are more fit for dedicated spaces rather than communal settings. Headsets and positional tracking devices can model the physical spaces in which users don headsets and even track their body movements
              </p>
              <p>
                Games are likely to be one of VR’s major applications in the consumer space, particularly in immersive genres such as first-person shooters, racing games, and simulators. VR’s big advantage for these types of games is its much higher degree of immersion. While big TV screens and monitors offer an ever-larger field of view, VR views have no edges at all. With Sony launching its second-generation VR headset in early 2023, and roughly 20 major games likely to launch for VR or with a VR option in 2023, more gamers may be tempted to try VR. One limitation, however, may be that even leading VR multiplayer games are often limited to just 10 players together in a session, while many of the most popular 2D games on consoles and PCs can host multiplayer experiences with up to 150 players simultaneously.
              </p>
              {/* Additional paragraphs can be added here */}
            </div>
          </div>
        </div>

        {/* Second Divider Line */}
        <div className="one_divider-line"></div>
      </div>
    </div>
  );
};

export default ModelOneComponent;
